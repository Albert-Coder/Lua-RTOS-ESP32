ifneq (foo$(TEST_COMPONENTS), foo)
CFLAGS += -DRUN_TESTS
endif

CFLAGS += -DLWIP_IPV6=1
CFLAGS += -DLWIP_RAW=1
CFLAGS += -DDEFAULT_RAW_RECVMBOX_SIZE=5

CFLAGS += -Wno-error=implicit-function-declaration -Wno-error=pointer-sign

LDFLAGS += -Wl,--wrap=_open_r
LDFLAGS += -Wl,--wrap=_unlink_r
LDFLAGS += -Wl,--wrap=_rename_r
LDFLAGS += -Wl,--wrap=_stat_r

CFLAGS += -DPLATFORM_ESP32
CFLAGS += -DKERNEL
CFLAGS += -DLUA_USE_CTYPE
CFLAGS += -DLUA_32BITS
CFLAGS += -DLUA_USE_CTYPE
CFLAGS += -DLUA_C89_NUMBERS

#
# LuaOS configuration
# 
CFLAGS += -DCPU_HZ=240000000L                   # CPU frequency in hertz
CFLAGS += -DCORE_TIMER_HZ=240000000L            # CPU core timer frequency
CFLAGS += -D_CLOCKS_PER_SEC_=configTICK_RATE_HZ # Number of interrupt ticks for reach 1 second
CFLAGS += -DUSE_NETWORKING=0                    # Networking is used (1 = yes, 0 = not)
CFLAGS += -DMTX_USE_EVENTS=0                    # Use event groups in mtx implementation (experimental)


CFLAGS += -DUSE_RTC=0						    # Enable RTC
CFLAGS += -DPATH_MAX=64


#
# SDCARD configuration
# 
CFLAGS += -DSD_KHZ=15000	           # Speed

#
# Display driver configuration
#
CFLAGS += -DDISPLAY_SPI=3
CFLAGS += -DDISPLAY_CS=5
CFLAGS += -DDISPLAY_RE=25
CFLAGS += -DDISPLAY_RS=26

#
# I2C driver configuration
#
CFLAGS += -DI2C1_PINS=0
CFLAGS += -DI2C2_PINS=0
CFLAGS += -DI2C3_PINS=0
CFLAGS += -DI2C4_PINS=0
CFLAGS += -DI2C5_PINS=0

#
# Lua configuration
#
CFLAGS += -DDEBUG_FREE_MEM=0           # Enable LUA free mem debug utility (only for debug purposes)
CFLAGS += -DLUA_USE_LUA_LOCK=0		   # Enable if Lua must use real lua_lock / lua_unlock implementation
CFLAGS += -DLUA_USE_SAFE_SIGNAL=0      # Enable use of LuaOS safe signal (experimental)
# CFLAGS += -DSTRCACHE_N=1
# CFLAGS += -DSTRCACHE_M=1
# CFLAGS += -DMINSTRTABSIZE=32
CFLAGS += -DLUA_USE_SHELL=1
CFLAGS += -DLUA_USE_EDITOR=1
CFLAGS += -DLUA_USE_HISTORY=1


# Define BUILD_TIME flag, with the EPOCH time when Lua RTOS is build.
# This is used for set system time when RTC is not set.
CFLAGS += -DBUILD_TIME=$(shell date +%s)
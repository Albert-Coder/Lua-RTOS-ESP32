
diff --git a/components/tcpip_adapter/tcpip_adapter_lwip.c b/components/tcpip_adapter/tcpip_adapter_lwip.c
index bc50c79..c8934f3 100644
--- a/components/tcpip_adapter/tcpip_adapter_lwip.c
+++ b/components/tcpip_adapter/tcpip_adapter_lwip.c

 
@@ -88,6 +89,7 @@ void tcpip_adapter_init(void)
         IP4_ADDR(&esp_ip[TCPIP_ADAPTER_IF_AP].ip, 192, 168 , 4, 1);
         IP4_ADDR(&esp_ip[TCPIP_ADAPTER_IF_AP].gw, 192, 168 , 4, 1);
         IP4_ADDR(&esp_ip[TCPIP_ADAPTER_IF_AP].netmask, 255, 255 , 255, 0);
+
         ret = sys_sem_new(&api_sync_sem, 0);
         if (ERR_OK != ret) {
             ESP_LOGD(TAG, "tcpip adatper api sync sem init fail");
@@ -107,6 +109,10 @@ static netif_init_fn tcpip_if_to_netif_init_fn(tcpip_adapter_if_t tcpip_if)
         case TCPIP_ADAPTER_IF_ETH:
             return ethernetif_init;
 #endif
+#ifdef CONFIG_SPI_ETHERNET
+        case TCPIP_ADAPTER_IF_SPI_ETH:
+            return spi_ethernetif_init;
+#endif
         default:
             return NULL;
     }

@@ -317,9 +325,13 @@ esp_err_t tcpip_adapter_set_ip_info(tcpip_adapter_if_t tcpip_if, tcpip_adapter_i
 
     TCPIP_ADAPTER_IPC_CALL(tcpip_if, 0, ip_info, 0, tcpip_adapter_set_ip_info_api);
 
-    if (tcpip_if >= TCPIP_ADAPTER_IF_MAX || ip_info == NULL ||
-            ip4_addr_isany_val(ip_info->ip) || ip4_addr_isany_val(ip_info->netmask)) {
-        return ESP_ERR_TCPIP_ADAPTER_INVALID_PARAMS;
+    if (tcpip_if != TCPIP_ADAPTER_IF_SPI_ETH) {
+        if (tcpip_if >= TCPIP_ADAPTER_IF_MAX || ip_info == NULL ||
+                ip4_addr_isany_val(ip_info->ip) || ip4_addr_isany_val(ip_info->netmask)) {
+            return ESP_ERR_TCPIP_ADAPTER_INVALID_PARAMS;
+        }
+    } else {
+    	dhcpc_status[TCPIP_ADAPTER_IF_SPI_ETH] = TCPIP_ADAPTER_DHCP_STOPPED;
     }
 
     if (tcpip_if == TCPIP_ADAPTER_IF_AP) {
@@ -328,7 +340,7 @@ esp_err_t tcpip_adapter_set_ip_info(tcpip_adapter_if_t tcpip_if, tcpip_adapter_i
         if (status != TCPIP_ADAPTER_DHCP_STOPPED) {
             return ESP_ERR_TCPIP_ADAPTER_DHCP_NOT_STOPPED;
         }
-    } else if (tcpip_if == TCPIP_ADAPTER_IF_STA || tcpip_if == TCPIP_ADAPTER_IF_ETH ) {
+    } else if (tcpip_if == TCPIP_ADAPTER_IF_STA || tcpip_if == TCPIP_ADAPTER_IF_ETH || tcpip_if == TCPIP_ADAPTER_IF_SPI_ETH ) {
         tcpip_adapter_dhcpc_get_status(tcpip_if, &status);
 
         if (status != TCPIP_ADAPTER_DHCP_STOPPED) {
@@ -430,7 +442,6 @@ esp_err_t tcpip_adapter_get_ip6_linklocal(tcpip_adapter_if_t tcpip_if, ip6_addr_
     return ESP_OK;
 }
 
@@ -652,7 +663,7 @@ static void tcpip_adapter_dhcpc_cb(struct netif *netif)
         return;
     }
 
-    if (netif != esp_netif[TCPIP_ADAPTER_IF_STA] && netif != esp_netif[TCPIP_ADAPTER_IF_ETH]) {
+    if (netif != esp_netif[TCPIP_ADAPTER_IF_STA] && netif != esp_netif[TCPIP_ADAPTER_IF_ETH] && netif != esp_netif[TCPIP_ADAPTER_IF_SPI_ETH]) {
         ESP_LOGD(TAG, "err netif=%p", netif);
         return;
     }
@@ -663,6 +674,8 @@ static void tcpip_adapter_dhcpc_cb(struct netif *netif)
             ip_info = &esp_ip[TCPIP_ADAPTER_IF_STA];
         } else if(netif == esp_netif[TCPIP_ADAPTER_IF_ETH] ) {
             ip_info = &esp_ip[TCPIP_ADAPTER_IF_ETH];
+        } else if(netif == esp_netif[TCPIP_ADAPTER_IF_SPI_ETH] ) {
+            ip_info = &esp_ip[TCPIP_ADAPTER_IF_SPI_ETH];
         } 
 
         //check whether IP is changed
@@ -680,6 +693,8 @@ static void tcpip_adapter_dhcpc_cb(struct netif *netif)
                 evt.event_id = SYSTEM_EVENT_STA_GOT_IP;
             } else if (netif == esp_netif[TCPIP_ADAPTER_IF_ETH]) {
                 evt.event_id = SYSTEM_EVENT_ETH_GOT_IP;
+            } else if (netif == esp_netif[TCPIP_ADAPTER_IF_SPI_ETH]) {
+                evt.event_id = SYSTEM_EVENT_SPI_ETH_GOT_IP;
             }
 
             memcpy(&evt.event_info.got_ip.ip_info, ip_info, sizeof(tcpip_adapter_ip_info_t));


